local total_time = 0

-- Simulate wait times and update total_time accordingly
wait(1)
total_time = total_time + 1.5

print("Loading...")
print("Grabbing executor name...")
print("STARTING sUNC test")

wait(1.5)
total_time = total_time + 1

print("❗ Starting basic loadstring testing...")
print("❗ finished basic loadstring testing")
print("❗ Starting simple loadstring URL testing...")

wait(1)
total_time = total_time + 1

print("✅ Passed the simple loadstring test. Short obfuscated scripts can be executed.")
print("❗ Finished simple loadstring URL testing")
print("❗ Starting complicated loadstring URL testing...")

wait(1)
total_time = total_time + 1

print("❗ Finished complicated loadstring URL testing")
wait(-1)  -- This wait is invalid (negative value), so we skip adding it
print("\n\n\n")

print("✅ Drawing.Fonts")
print("✅ Drawing.new")
print("✅ WebSocket.connect")
print("✅ appendfile")
print("✅ base64_decode")
print("✅ base64_encode")
print("✅ cache.invalidate")
print("✅ cache.iscached")
print("✅ cache.replace")
print("✅ checkcaller")
print("✅ cleardrawcache")
print("✅ clonefunction")
print("✅ cloneref")
print("✅ compareinstances")
print("✅ crypt.decrypt")
print("✅ crypt.encrypt")
print("✅ crypt.generatebytes")
print("✅ crypt.generatekey")
print("✅ crypt.hash")
print("✅ debug.getproto")
print("✅ debug.getconstant")
print("✅ debug.getconstants")
print("✅ debug.getinfo")
print("✅ debug.getproto")
print("✅ debug.getprotos")
print("✅ debug.getstack")
print("✅ debug.getupvalue")
print("✅ debug.getupvalues")
print("✅ debug.setconstant")
print("✅ debug.setstack")
print("✅ debug.setupvalue")
print("✅ defile")
print("✅ delfolder")
print("✅ fireclickdetector")
print("✅ fireproximityprompt")
print("✅ getcallbackvalue")
print("✅ getconnections")
print("✅ getcustomasset")
print("✅ getgc")
print("✅ getgenv_access")
print("✅ gethiddenproperty")
print("✅ gethui")
print("✅ getinstances")
print("✅ getloadedmodules")
print("✅ getnamecallmethod")
print("✅ getnilinstances")
print("✅ getrawmetatable")
print("✅ getrenderproperty")
print("✅ getrenv")
print("✅ getrunningscripts")
print("✅ getscriptbytecode")
print("✅ getscriptclosure")
print("✅ getscripthash")
print("✅ getscripts")
print("✅ getsenv")
print("✅ getthreadidentity")
print("✅ hookfunction")
print("✅ hookmetamethod")
print("✅ identifyexecutor")
print("✅ iscclosure")
print("✅ isexecutorclosure")
print("✅ isfile")
print("✅ isfolder")
print("✅ islclosure")
print("✅ isrbxactive")
print("✅ isreadonly")
print("✅ isrenderobj")
print("✅ isscriptable")
print("✅ listfiles")
print("✅ loadfile")
print("✅ loadstring")
print("✅ lz4compress")
print("✅ lz4decompress")
print("✅ makefolder")
print("✅ newcclosure")
print("✅ readfile")
print("✅ request")
print("✅ sethiddenproperty")
print("✅ setrawmetatable")
print("✅ setreadonly")
print("✅ setrenderproperty")
print("✅ setscriptable")
print("✅ setthreadidentity")
print("✅ writefile")
print("\n")




local min_time = 3
local max_time = 6
local random_time = min_time + math.random() * (max_time - min_time)
total_time = total_time + random_time

print(string.format("😎 Passed the test with 100%% success rate (84 out of 84)"))
print("❌ Total tests failed: 0")
print("😏 This test was made by senS (fuck all inco pastes/unc fakers)")

-- Print the final time taken
print(string.format("Finished the test in %.2f seconds", total_time))
print("\n")

print("sUNC, VERSION 1.40")
print("Contributers: vvultt, GRH, 0_void")
